workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH && $CI_COMMIT_TITLE =~ /^\d+.\d+.\d+$/
      when: never
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  tags:
    - qa-sit-nacos

variables:
  FLAKE_COMMAND: poetry run flake8 examples/ httprunner/ tests/
  UNIT_TEST_COMMAND: poetry run coverage run --source=httprunner -m pytest tests
  SMOKE_TEST_COMMAND: "cd examples/postman_echo/request_methods && poetry run pytest ."
  IS_RUN_SMOKE_TEST: "true"

cache:
  key:
    files:
      - poetry.lock
  paths:
    - .venv

stages:
  - pre-install
  - install
  - build
  - test
  - publish

install tools:
  stage: pre-install
  variables:
    POETRY_VERSION: 1.4.2
    GITLAB_RUNNER_HOME: /home/gitlab-runner
    POETRY: ${GITLAB_RUNNER_HOME}/.local/bin/poetry
    ALLURE: ${GITLAB_RUNNER_HOME}/allure-2.18.0/bin/allure
  script:
    - |
      if ! poetry -V &> /dev/null; then
        echo "command poetry not found, install..."
        curl -k -sSL "https://install.python-poetry.org" | POETRY_VERSION=$POETRY_VERSION python3.9 -
        echo export PATH="${GITLAB_RUNNER_HOME}/.local/bin:$PATH" >> ${GITLAB_RUNNER_HOME}/.bash_profile
        source ${GITLAB_RUNNER_HOME}/.bash_profile
      elif [[ $(poetry -V | grep -oE \[0-9]+\.\[0-9]+\.[0-9]+) != $POETRY_VERSION ]]; then
        echo "current poetry version is not the expected version: $POETRY_VERSION, updating..."
        poetry -V
        poetry self update $POETRY_VERSION
      fi
    - |
      if ! [[ -f ${ALLURE} ]]
      then
        wget https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.18.0/allure-commandline-2.18.0.zip
        unzip allure-commandline-2.18.0.zip -d ${GITLAB_RUNNER_HOME} && rm -f allure-commandline-2.18.0.zip
        echo export PATH="${GITLAB_RUNNER_HOME}/allure-2.18.0/bin:$PATH" >> ${GITLAB_RUNNER_HOME}/.bash_profile
      fi
  cache: {}

install dependencies:
  stage: install
  script:
    - poetry config virtualenvs.in-project true
    - poetry install

flake8:
  stage: test
  script:
    - $FLAKE_COMMAND

unit test:
  stage: test
  script:
    - $UNIT_TEST_COMMAND

smoke test:
  stage: test
  rules:
    - if: $IS_RUN_SMOKE_TEST == "true"
  script:
    - $SMOKE_TEST_COMMAND

semantic release:
  stage: publish
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  variables:
    GIT_REPO_DOMAIN: fangcun.vesync.cn
    GITLAB_ACCESS_TOKEN: 8HVqdecizwsVL8mAgRsy
    REPOSITORY_URL: "http://10.40.9.73:8081/repository/pypi-internal/"
    REPOSITORY_USERNAME: admin
    REPOSITORY_PASSWORD: 111111a?D
  script:
    - git config --global user.email "semantic-release"
    - git config --global user.name "semantic-release"
    - git checkout master && git pull
    - git remote set-url --push origin "https://gitlab-ci-token:$GITLAB_ACCESS_TOKEN@$GIT_REPO_DOMAIN/$CI_PROJECT_PATH"
    - poetry run semantic-release publish -v DEBUG
